version: 2.1

jobs:
  build_debian_upgrade_from_community:
    machine:
      image: ubuntu-2004:current
    parameters:
      docker_image:
        type: string
    steps:
      - checkout
      - run:
          name: "Prepare image with systemd enabled"
          command: echo -e "FROM << parameters.docker_image >>\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update; apt-get install -y systemd systemd-sysv; \nCMD [\"/lib/systemd/systemd\"]" | sudo docker build --tag debian_systemd -
      - run:
          name: "Deploy new systemd enabled image"
          command: sudo docker run -d -v /sys/fs/cgroup/:/sys/fs/cgroup:ro --privileged --cap-add SYS_ADMIN  --name linux_systemd_container debian_systemd /lib/systemd/systemd
      - run: sudo docker ps
      - run: sudo docker exec -it linux_systemd_container systemctl status --no-pager
      - run: sudo docker exec -it linux_systemd_container apt install -y wget
      - run: sudo docker exec -it linux_systemd_container wget https://install.fastnetmon.com/installer?random-argument-to-disable-caching-$CIRCLE_WORKFLOW_JOB_ID -Oinstaller
      - run: sudo docker exec -it linux_systemd_container chmod +x installer
      - run: sudo docker exec --env "CI=true" -it linux_systemd_container ./installer -install_community_edition
      - run: sudo docker exec --env "CI=true" -it linux_systemd_container ./installer -do_not_check_license
      - run: sudo docker exec --env -it linux_systemd_container cat /var/log/fastnetmon/fastnetmon.log
      - run: sudo docker exec --env -it linux_systemd_container systemctl status fastnetmon
      - run: sudo docker exec --env -it linux_systemd_container ldd /opt/fastnetmon/app/bin/fastnetmon
      - run: sudo docker exec --env -it linux_systemd_container ldd /opt/fastnetmon/app/bin/traffic_db
      - run: sudo docker exec --env -it linux_systemd_container ldd /opt/fastnetmon/app/bin/fill_dictionaries
      - run: sudo docker exec --env -it linux_systemd_container /opt/fastnetmon/app/bin/fastnetmon --configuration_check
      - run: sudo docker exec --env -it linux_systemd_container fcli show fastnetmon_version
      - run: sudo docker exec --env -it linux_systemd_container fcli show main
      - run: sudo docker exec --env -it linux_systemd_container fcli show hostgroup
      - run: sudo docker exec --env "CI=true" -it linux_systemd_container ./installer -install_graphic_stack
      - run: sudo docker exec --env "CI=true" -it linux_systemd_container ./installer -import_community_edition_configuration
  build_debian:
    machine:
      image: ubuntu-2004:current
    parameters:
      docker_image:
        type: string
    steps:
      - checkout
      - run:
          name: "Prepare image with systemd enabled"
          command: echo -e "FROM << parameters.docker_image >>\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update; apt-get install -y systemd systemd-sysv; \nCMD [\"/lib/systemd/systemd\"]" | sudo docker build --tag debian_systemd - 
      - run:
          name: "Deploy new systemd enabled image"
          command: sudo docker run -d -v /sys/fs/cgroup/:/sys/fs/cgroup:ro --privileged --cap-add SYS_ADMIN  --name linux_systemd_container debian_systemd /lib/systemd/systemd
      - run: sudo docker ps
      - run: sudo docker exec -it linux_systemd_container systemctl status --no-pager
      - run: sudo docker exec -it linux_systemd_container apt install -y wget
      - run: sudo docker exec -it linux_systemd_container wget https://install.fastnetmon.com/installer?random-argument-to-disable-caching-$CIRCLE_WORKFLOW_JOB_ID -Oinstaller
      - run: sudo docker exec -it linux_systemd_container chmod +x installer
      - run: sudo docker exec --env "CI=true" -it linux_systemd_container ./installer -do_not_check_license
      - run: sudo docker exec --env -it linux_systemd_container cat /var/log/fastnetmon/fastnetmon.log
      - run: sudo docker exec --env -it linux_systemd_container systemctl status fastnetmon
      - run: sudo docker exec --env -it linux_systemd_container ldd /opt/fastnetmon/app/bin/fastnetmon
      - run: sudo docker exec --env -it linux_systemd_container ldd /opt/fastnetmon/app/bin/traffic_db
      - run: sudo docker exec --env -it linux_systemd_container ldd /opt/fastnetmon/app/bin/fill_dictionaries
      - run: sudo docker exec --env -it linux_systemd_container /opt/fastnetmon/app/bin/fastnetmon --configuration_check
      - run: sudo docker exec --env -it linux_systemd_container fcli show fastnetmon_version
      - run: sudo docker exec --env -it linux_systemd_container fcli show main
      - run: sudo docker exec --env -it linux_systemd_container fcli show hostgroup
      - run: sudo docker exec --env "CI=true" -it linux_systemd_container ./installer -install_graphic_stack
  build_redhat:
    parameters:
      docker_image:
        type: string
    machine:
      image: ubuntu-2004:current
    steps:
      - run: sudo docker run -d -v /sys/fs/cgroup/:/sys/fs/cgroup:ro --privileged --cap-add SYS_ADMIN  --name linux_systemd_container << parameters.docker_image >> /sbin/init
      - run: sudo docker ps
      - run: sudo docker exec -it linux_systemd_container systemctl status --no-pager
      - run: sudo docker exec -it linux_systemd_container yum install -y wget
      - run:
          name: "Download installer, for CentOS 7 we have issue with Let's encrypt and we need to skip certificate validation"
          command: sudo docker exec -it linux_systemd_container wget --no-check-certificate https://install.fastnetmon.com/installer?random-argument-to-disable-caching-$CIRCLE_WORKFLOW_JOB_ID -Oinstaller
      - run: sudo docker exec -it linux_systemd_container chmod +x installer
      - run: sudo docker exec --env "CI=true" -it linux_systemd_container ./installer -do_not_check_license
      - run: sudo docker exec --env -it linux_systemd_container cat /var/log/fastnetmon/fastnetmon.log
      - run: sudo docker exec --env -it linux_systemd_container systemctl status fastnetmon
      - run: sudo docker exec --env -it linux_systemd_container ldd /opt/fastnetmon/app/bin/fastnetmon
      - run: sudo docker exec --env -it linux_systemd_container ldd /opt/fastnetmon/app/bin/traffic_db
      - run: sudo docker exec --env -it linux_systemd_container ldd /opt/fastnetmon/app/bin/fill_dictionaries
      - run: sudo docker exec --env -it linux_systemd_container /opt/fastnetmon/app/bin/fastnetmon --configuration_check
      - run: sudo docker exec --env -it linux_systemd_container fcli show fastnetmon_version
      - run: sudo docker exec --env -it linux_systemd_container fcli show main
      - run: sudo docker exec --env -it linux_systemd_container fcli show hostgroup
      - run: sudo docker exec --env "CI=true" -it linux_systemd_container ./installer -install_graphic_stack
  ubuntu2004vm:
    machine:
      image: ubuntu-2004:current
    steps:
      - run: sudo apt-get update
      - run: sudo DEBIAN_FRONTEND=noninteractive apt-get install -y wget systemd
      - run: wget https://install.fastnetmon.com/installer?random-argument-to-disable-caching-$CIRCLE_WORKFLOW_JOB_ID -Oinstaller
      - run: chmod +x installer
      - run: sudo CI=true ./installer -do_not_check_license
      - store_artifacts:
          path: /tmp/fastnetmon_install.log
      - run: ldd /opt/fastnetmon/app/bin/fastnetmon
      - run: ldd /opt/fastnetmon/app/bin/traffic_db
      - run: ldd /opt/fastnetmon/app/bin/fill_dictionaries
      - run: sudo /opt/fastnetmon/app/bin/fastnetmon --configuration_check
      - store_artifacts:
          path: /var/log/fastnetmon/fastnetmon.log
      - run: sudo systemctl status fastnetmon --no-pager
      - run: sudo fcli show fastnetmon_version
      - run: sudo fcli show main
      - run: sudo fcli show hostgroup
      - run: sudo CI=true ./installer -install_graphic_stack
  ubuntu2004vm_docker:
    machine:
      image: ubuntu-2004:current
    steps:
      - run: sudo apt-get update
      - run: sudo DEBIAN_FRONTEND=noninteractive apt-get install -y wget
      - run: wget https://install.fastnetmon.com/installer?random-argument-to-disable-caching-$CIRCLE_WORKFLOW_JOB_ID -Oinstaller
      - run: chmod +x installer
      - run: sudo CI=true ./installer -fastnetmon_docker
      - store_artifacts:
          path: /tmp/fastnetmon_install.log
      - run: sudo chmod -R 755 /var/lib/fastnetmon_docker # make permissions more relaxed to get log file as artifact
      - store_artifacts:
          path: /var/lib/fastnetmon_docker/fastnetmon/logs/fastnetmon.log
      - run: sudo fcli show fastnetmon_version
      - run: sudo fcli show main
      - run: sudo fcli show hostgroup
workflows:
  version: 2
  all_distros_nightly:
    triggers:
      - schedule:
          cron: "0 3 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - ubuntu2004vm
      - ubuntu2004vm_docker
      - build_redhat:
          name: "CentOS 7"
          docker_image: "centos:centos7"
      - build_redhat:
          name: "AlmaLinux 8"
          docker_image: "almalinux:8"
      - build_debian:
          name: "Debian 9"
          docker_image: "debian:9"
      - build_debian:
          name: "Debian 10"
          docker_image: "debian:10"
      - build_debian:
          name: "Debian 11"
          docker_image: "debian:11"
      - build_debian:
          name: "ubuntu 16.04"
          docker_image: "ubuntu:16.04"
      - build_debian:
          name: "ubuntu 18.04"
          docker_image: "ubuntu:18.04"
      - build_debian:
          name: "ubuntu 20.04"
          docker_image: "ubuntu:20.04"
      - build_debian_upgrade_from_community:
          name: "ubuntu 20.04 upgrade from community" 
          docker_image: "ubuntu:20.04"
      - build_debian:
          name: "ubuntu 22.04"
          docker_image: "ubuntu:22.04"
      - build_debian_upgrade_from_community:
          name: "ubuntu 22.04 upgrade from community"
          docker_image: "ubuntu:22.04"
  all_distros:
    jobs:
      - ubuntu2004vm
      - ubuntu2004vm_docker
      - build_redhat:
          name: "CentOS 7"
          docker_image: "centos:centos7"
      - build_redhat:
          name: "AlmaLinux 8"
          docker_image: "almalinux:8"
      - build_debian:
          docker_image: "debian:9"
          name: "Debian 9"
      - build_debian:
          docker_image: "debian:10"
          name: "Debian 10"
      - build_debian:
          docker_image: "debian:11"
          name: "Debian 11"
      - build_debian:
          name: "ubuntu 16.04"
          docker_image: "ubuntu:16.04"
      - build_debian:
          name: "ubuntu 18.04"
          docker_image: "ubuntu:18.04"
      - build_debian:
          name: "ubuntu 20.04"
          docker_image: "ubuntu:20.04"
      - build_debian_upgrade_from_community:
          name: "ubuntu 20.04 upgrade from community"
          docker_image: "ubuntu:20.04"
      - build_debian:
          name: "ubuntu 22.04"
          docker_image: "ubuntu:22.04"
      - build_debian_upgrade_from_community:
          name: "ubuntu 22.04 upgrade from community"
          docker_image: "ubuntu:22.04"
